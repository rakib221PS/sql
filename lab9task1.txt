create table seller(
    seller_id number not null,
    seller_name varchar2(32) not null,
    seller_address varchar2(32) not null,
    postal_address number not null
);

create table product(
    product_id number not null,
    product_name varchar2(32) not null,
    product_price number not null,
    product_available number not null,
    product_seller_id number not null
);

alter table seller add constraint seller_pk primary key (seller_id);
alter table product add constraint product_pk primary key (product_id);

alter table product add constraint product_seller_fk foreign key (product_seller_id) references seller(seller_id);

insert into seller values(1, 'no seller', 'not exists', 92345);
insert into seller values(2, 'who is', 'hidden', 12345);
insert into seller values(3, 'no one', 'mars', 00000);
insert into seller values(4, 'none', 'saturn', -89762);
insert into seller values(5, 'he is not', 'inside sun', 101010);
insert into seller values(6, 'no one', 'mars', 00000);
insert into seller values(7, 'none', 'saturn', -89762);
insert into seller values(8, 'he is not', 'inside sun', 101010);

insert into product values(1, 'rat', 456, 12, 2);
insert into product values(2, 'snack', 1256, 42, 5);
insert into product values(3, 'snack', 56, 2, 2);
insert into product values(4, 'bat', 231, 62, 3);
insert into product values(5, 'turtle', 6000, 123, 1);
insert into product values(6, 'snack', 56, 4, 2);
insert into product values(8, 'insect', 56, 4, 8);

select * from seller;

select product_name from product;

select * from product
    where product_price > 500;

select sum(product_price) from product;

select avg(product_price) from product;

SELECT product_name, SUM(product_price)
  FROM product
       GROUP BY product_name
       HAVING SUM(product_available)<50;
       
SELECT product_name, product_available FROM product
         ORDER BY product_available desc;
         
SELECT product_name, product_available FROM product
         ORDER BY  product_name desc, product_available asc;
         
SELECT * FROM seller
  WHERE seller_name LIKE 'n%';
  
SELECT DISTINCT seller_name FROM seller;

SELECT seller_name, seller_address FROM seller, product
          WHERE seller_id = product_seller_id AND product_id > 3;
          
SELECT product_name, SUM(product_seller_id) AS sum FROM product
          WHERE product_seller_id = 2
          GROUP BY product_name
          HAVING SUM(product_available) < 20
          ORDER BY sum ASC;
          
SELECT product_name, SUM(product_seller_id) AS sum FROM product
          WHERE product_seller_id = 2
          GROUP BY product_name
          HAVING SUM(product_available) < 20
          ORDER BY sum ASC
          OFFSET 1 ROWS;
          
SELECT product_name, SUM(product_seller_id) AS sum FROM product
          WHERE product_seller_id = 2
          GROUP BY product_name
          HAVING SUM(product_available) < 20
          ORDER BY sum ASC
          OFFSET 1 ROWS
          FETCH NEXT 1 ROWS ONLY;

SELECT DISTINCT p.product_name,p.product_id, p.product_seller_id FROM product p, seller d
          WHERE p.product_id = d.seller_id;

SELECT DISTINCT p.product_name,p.product_id, p.product_seller_id FROM product p, seller d
          WHERE p.product_id = p.product_seller_id;
          
SELECT seller_id, seller_name, product_name, product_id FROM product
          INNER JOIN seller
          ON product_id = seller_id;
          
SELECT product_name, product_available, seller_name FROM seller
          RIGHT JOIN product
          ON seller_id = product_id;
          
SELECT product_name, product_available, seller_name FROM seller
          LEFT JOIN product
          ON seller_id =  product_id;
          
SELECT product_name, product_available, seller_name FROM seller
          FULL JOIN product
          ON seller_id =  product_id;
          
SELECT seller_name, product_name FROM seller
          CROSS JOIN product;
          
SELECT a.seller_id, a.seller_name, b.seller_name, b.seller_id
          FROM seller a, seller b
          WHERE a.seller_id < b.seller_id;
          
SELECT * FROM seller
          NATURAL JOIN product;
          
SELECT seller_name, seller_id, seller_address FROM seller
          WHERE seller_id IN
          (SELECT  product_seller_id FROM product WHERE product_available < 50);
          
SELECT * FROM seller
          WHERE seller_address IN
          ('mars','saturn', 'inside sun');
          
SELECT * FROM seller
          WHERE seller_address NOT IN
          ('mars','saturn', 'inside sun');
          
SELECT seller_name, seller_address FROM seller
          WHERE EXISTS
          (SELECT  product_id FROM product 
          WHERE  product_id = seller_id);
          
SELECT seller_id, seller_name FROM seller
          WHERE seller_id != ALL (SELECT  product_seller_id FROM product
          WHERE product_name = 'snack' OR product_available < 50);
